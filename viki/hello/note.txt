[~]$

1. 编译含有中文的 viki 文件

如果待编译的 viki 文件中含有中文,  我们需要在编译命令行中加载中文支持包.  例如
,  加载了中文支持包编译 hello.viki 的命令行如下:
1. 编译含有中文的 viki 文件
[~]$ deplate -m zh-cn-autospace hello.viki
// 用 UTF-8 编码
[~]$ deplate -m utf8 hello.viki

默认情况下,  deplate 认为你的中文文件使用 GB2312 编码.  但如果你是像滇狐一样的
UTF-8 狂热爱好者的话,  并且希望用 UTF-8 编写 viki 文件的话,  最新版的 deplate
已经支持了 UTF-8 编码.  只要在命令行中再加上"-m utf8",  deplate 就可以正确地识
别你的 UTF-8 编码的 viki 文件.

2. 使用模板与 CSS

在命令提示符下输入"deplate ",回车后,  deplate 会列出支持的模板与 CSS 列表,  可
以在编译时使用"-t 模板名"与"--css 样式表名"加载指定的模板与样式表.  注意:  加
载模板时需要给出扩展名".html",  加载 CSS 时不能给出扩展名".css".  这里是滇狐用
来编写本主页的模板,  按照文中描述的方法安装后,  可以使用该命令行加载模板与
CSS:
[~]$ deplate -m zh-cn-autospace -t bright.html --css bright hello.viki
[~]$ deplate -m utf8 -t bright.html --css bright hello.viki

3. 使用语法加亮

deplate 里带有两个不同的语法加亮模块,  一个是内置的"code-highlight",  一个是调
用 gvim 的"code-gvim".  由于 gvim 支持大量见所未见,闻所未闻的文件格式的语法加
亮,  所以成为滇狐的首选.  官方发行的 code-gvim 模块在滇狐的机器上无法正常运行,
    请参照这里的描述进行修改.  要使用这个模块,  只需要在编译 viki 文件时,  增
    加一个"-m code-gvim"参数就可以了.
4. 指定输出文件

为了方便生成的 HTML 的打包与上传,  最好不要把 viki 文件与生成的 HTML 文件放在
同一个目录下.  在调用 deplate 的时候,  使用"-o 输出文件"参数,  可以指定 HTML
文件的输出位置,  方便其后的管理.  在之前的版本里,  滇狐曾经使用"-d 输出文件夹"
这样的格式直接指定输出文件夹,  deplate 会使用与输入文件同名的 .html 文件作为输
出文件名,  并输出到指定的目录下,  非常理想.  但在目前最新的 deplate 0.8.3 下,
    如果文件名有下划线,  输出 HTML 的时候 deplate 总是会把下划线变成双下划线,
    但在生成超链接的时候却没有把相应的链接也变成双下划线,  这应该是 deplate 的
    一个 bug.  但滇狐比较懒,  不想慢慢 debug 这个问题了,  所以直接用 -o 指定输
    出文件的完整文件名就可以了.

5. 使用脚本简化编译

从前面可以看出,  绝大部分时候编译 viki 文件时,  需要输入的命令行都是比较长的.
因此,  我们需要一些辅助工具,  以便减轻使用 ViKi 的负担.

另外,  当一个文件夹下存在许许多多个 viki 文件,  而我们只修改了其中的一个或几个
的时候,  我们没有必要把所有文件都编译一遍,  只编译修改过的文件就可以了.  因此,
    我们还需要一个编译脚本,  帮助我们完成这件事情.

如果懒得编写自己的脚本的话,  可以下载滇狐编写的编译脚本,  希望这个脚本能够给大
家带来方便.
